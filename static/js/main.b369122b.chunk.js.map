{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","title","select","onChangeInput","event","setState","target","value","onChangeSelect","filterTodos","todos","length","filter","todo","toLowerCase","includes","this","props","selectedTodo","selectedTodoId","filteredTodos","completed","className","type","placeholder","onChange","name","id","map","key","classNames","readOnly","userId","onClick","React","Component","request","url","options","fetch","then","response","ok","Error","status","statusText","json","result","data","CurrentUser","user","loadData","prevProps","todoId","a","email","phone","role","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b369122b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    title: '',\n    select: 'All',\n  }\n\n  onChangeInput = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  onChangeSelect = (event) => {\n    this.setState({\n      select: event.target.value,\n    });\n  }\n\n  filterTodos = todos => (\n    this.state.title.length > 0\n      ? todos.filter(\n        (todo) => {\n          if (todo.title === null) {\n            return false;\n          }\n\n          return todo.title.toLowerCase()\n            .includes(this.state.title.toLowerCase());\n        },\n      )\n      : todos\n  )\n\n  render() {\n    const { selectedTodo, selectedTodoId } = this.props;\n\n    let filteredTodos = this.filterTodos(this.props.todos);\n\n    if (this.state.select !== 'All') {\n      filteredTodos = filteredTodos.filter(todo => (\n        this.state.select === 'Completed'\n          ? todo.completed\n          : !todo.completed\n      ));\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <input\n          type=\"text\"\n          placeholder=\"What are you looking for?\"\n          value={this.state.title}\n          onChange={this.onChangeInput}\n        />\n        <select\n          name=\"select\"\n          id=\"select\"\n          onChange={this.onChangeSelect}\n        >\n          <option\n            value=\"All\"\n          >\n            All\n          </option>\n          <option\n            value=\"Completed\"\n          >\n            Completed\n          </option>\n          <option\n            value=\"Active\"\n          >\n            Active\n          </option>\n        </select>\n\n        <h2>Todos:</h2>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  (todo.completed\n                    ? 'TodoList__item--unchecked'\n                    : 'TodoList__item--checked'\n                  ),\n                )}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                {selectedTodoId === todo.userId ? (\n                  <button\n                    className=\"\n                      TodoList__user-button\n                      button\n                      TodoList__user-button--selected\n                    \"\n                    type=\"button\"\n                    onClick={() => {\n                      selectedTodo(0);\n                    }}\n                  >\n                    User&nbsp;\n                    {`#${todo.userId}`}\n                  </button>\n                ) : (\n                  <button\n                    className=\"\n                      TodoList__user-button\n                      button\n                      TodoList__user-button--unselected\n                    \"\n                    type=\"button\"\n                    onClick={() => {\n                      selectedTodo(todo.userId);\n                    }}\n                  >\n                    User&nbsp;\n                    {`#${todo.userId}`}\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  selectedTodo: PropTypes.func.isRequired,\n  selectedTodoId: PropTypes.number.isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => fetch(`${API_URL}${url}`, options)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\n\nexport const getTodos = () => request('/todos');\n\nexport const getUserData = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUserData } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadData();\n    // console.log(user);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props.todoId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUserData(this.props.todoId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { selectedTodo } = this.props;\n\n\n    if (!user) {\n      return (\n        <div className=\"\n          text-center\n          CurrentUser__spinner-position\n          \"\n        >\n          <div\n            className=\"\n              spinner-grow\n              text-success\n              CurrentUser__spinner-config\n              \"\n            role=\"status\"\n          >\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          className=\"\n            TodoList__user-button\n            button\n            CurrentUser__clear\n          \"\n          onClick={() => {\n            selectedTodo(0);\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  todoId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todoId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n    // console.log(todos);\n  }\n\n  selectedTodo = (todoId) => {\n    this.setState({ todoId });\n  }\n\n  render() {\n    const { todos, todoId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length > 0 && (\n            <TodoList\n              todos={todos}\n              selectedTodoId={todoId}\n              // eslint-disable-next-line\n              selectedTodo={this.selectedTodo}\n            />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {todoId ? (\n              <CurrentUser\n                todoId={todoId}\n                selectedTodo={this.selectedTodo}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}