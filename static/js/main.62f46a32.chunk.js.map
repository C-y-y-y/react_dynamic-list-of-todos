{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","selectedTodo","selectedTodoId","className","map","todo","key","id","classNames","completed","type","readOnly","title","userId","onClick","request","url","options","fetch","then","response","ok","Error","status","statusText","json","result","data","CurrentUser","state","user","this","loadData","prevProps","props","todoId","a","setState","name","email","phone","role","React","Component","App","length","ReactDOM","render","document","getElementById"],"mappings":"yYAKaA,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,eAAxB,OACtB,yBAAKC,UAAU,YACb,sCAEA,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,kBACXH,EAAMI,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAKE,GACVJ,UAAWK,IACT,iBACCH,EAAKI,UACF,4BACA,4BAIN,+BACE,2BAAOC,KAAK,WAAWC,UAAQ,IAC/B,2BAAIN,EAAKO,QAGVV,IAAmBG,EAAKQ,OACvB,4BACEV,UAAU,iEAKVO,KAAK,SACLI,QAAS,WACPb,EAAa,KARjB,sBAYOI,EAAKQ,SAGZ,4BACEV,UAAU,mEAKVO,KAAK,SACLI,QAAS,WACPb,EAAaI,EAAKQ,UARtB,sBAYOR,EAAKQ,kBCrDbE,G,MAAU,SAACC,EAAKC,GAAN,OAAkBC,MAAM,GAAD,OAF9B,kCAE8B,OAAcF,GAAOC,GAChEE,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAEjBN,MAAK,SAAAO,GAAM,OAAIA,EAAOC,UCLZC,EAAb,4MACEC,MAAQ,CACNC,KAAM,MAFV,uDAKE,WACEC,KAAKC,aANT,gCAUE,SAAmBC,GACbA,IAAcF,KAAKG,MAAMC,QAC3BJ,KAAKC,aAZX,6DAgBE,4BAAAI,EAAA,sEDPyBvB,ECQQkB,KAAKG,MAAMC,ODRTpB,EAAQ,UAAD,OAAWF,ICOrD,OACQiB,EADR,OAGEC,KAAKM,SAAS,CAAEP,SAHlB,iCDPyB,IAAAjB,ICOzB,YAhBF,0EAsBE,WACE,IAAQiB,EAASC,KAAKF,MAAdC,KAER,OAAKA,EAsBH,yBAAK3B,UAAU,eACb,wBAAIA,UAAU,sBACZ,+CAEG2B,EAAKvB,KAIV,wBAAIJ,UAAU,qBAAqB2B,EAAKQ,MACxC,uBAAGnC,UAAU,sBAAsB2B,EAAKS,OACxC,uBAAGpC,UAAU,sBAAsB2B,EAAKU,QA9BxC,yBAAKrC,UAAU,+CAKb,yBACEA,UAAU,0DAKVsC,KAAK,UAEL,0BAAMtC,UAAU,mBAAhB,oBAxCZ,GAAiCuC,IAAMC,WC6CxBC,E,4MA1Cbf,MAAQ,CACN7B,MAAO,GACPmC,OAAQ,G,8FAGV,4BAAAC,EAAA,sEFD4BrB,EAAQ,UECpC,OACQf,EADR,OAGE+B,KAAKM,SAAS,CAAErC,UAHlB,gD,0EAOA,WAAU,IAAD,OACP,EAA0B+B,KAAKF,MAAvB7B,EAAR,EAAQA,MAAOmC,EAAf,EAAeA,OAEf,OACE,yBAAKhC,UAAU,OACb,yBAAKA,UAAU,gBACZH,EAAM6C,OAAS,GACd,kBAAC,EAAD,CACE7C,MAAOA,EACPE,eAAgBiC,EAEhBlC,aAAc,SAACkC,GACb,EAAKE,SAAS,CAAEF,eAMxB,yBAAKhC,UAAU,gBACb,yBAAKA,UAAU,0BACZgC,EACC,kBAAC,EAAD,CAAaA,OAAQA,IACnB,0B,GAnCEO,IAAMC,WCFxBG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.62f46a32.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, selectedTodo, selectedTodoId }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classNames(\n              'TodoList__item',\n              (todo.completed\n                ? 'TodoList__item--unchecked'\n                : 'TodoList__item--checked'\n              ),\n            )}\n          >\n            <label>\n              <input type=\"checkbox\" readOnly />\n              <p>{todo.title}</p>\n            </label>\n\n            {selectedTodoId === todo.userId ? (\n              <button\n                className=\"\n                  TodoList__user-button\n                  button\n                  TodoList__user-button--selected\n                \"\n                type=\"button\"\n                onClick={() => {\n                  selectedTodo(0);\n                }}\n              >\n                User&nbsp;\n                {`#${todo.userId}`}\n              </button>\n            ) : (\n              <button\n                className=\"\n                  TodoList__user-button\n                  button\n                  TodoList__user-button--unselected\n                \"\n                type=\"button\"\n                onClick={() => {\n                  selectedTodo(todo.userId);\n                }}\n              >\n                User&nbsp;\n                {`#${todo.userId}`}\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  selectedTodo: PropTypes.func.isRequired,\n  selectedTodoId: PropTypes.number.isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => fetch(`${API_URL}${url}`, options)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\n\nexport const getTodos = () => request('/todos');\n\nexport const getUserData = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUserData } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadData();\n    // console.log(user);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props.todoId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUserData(this.props.todoId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return (\n        <div className=\"\n          text-center\n          CurrentUser__spinner-position\n          \"\n        >\n          <div\n            className=\"\n              spinner-grow\n              text-success\n              CurrentUser__spinner-config\n              \"\n            role=\"status\"\n          >\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  todoId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todoId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n    // console.log(todos);\n  }\n\n  render() {\n    const { todos, todoId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length > 0 && (\n            <TodoList\n              todos={todos}\n              selectedTodoId={todoId}\n              // eslint-disable-next-line\n              selectedTodo={(todoId) => {\n                this.setState({ todoId });\n              }}\n            />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {todoId ? (\n              <CurrentUser todoId={todoId} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}